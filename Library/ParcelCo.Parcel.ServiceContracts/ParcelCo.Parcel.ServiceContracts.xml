<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ParcelCo.Parcel.ServiceContracts</name>
    </assembly>
    <members>
        <member name="T:ParcelCo.Parcel.ServiceContracts.IParcel">
            <summary>
            Parcel service. Contains methods to identify the best package size/type based on
            pacakge dimensions.
            </summary>
        </member>
        <member name="M:ParcelCo.Parcel.ServiceContracts.IParcel.Calculate(System.Collections.Generic.IEnumerable{ParcelCo.Parcel.ModelContracts.IParcelType},System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Identifies the best package size/type based on
            default package types/sizes that can be accommdiated
            </summary>
            <param name="parcelTypes">Collection of parcel types/sizes that can be
            accoommodated.</param>
            <param name="length">The length.</param>
            <param name="breath">The breath.</param>
            <param name="height">The height.</param>
            <param name="weight">The weight.</param>
            <returns></returns>
            <remarks>
            Uses linq to match the package dimensions provided with
            the default package types/sizes that can be accommodated
            </remarks>
        </member>
        <member name="T:ParcelCo.Parcel.ServiceContracts.Rules.IBreathCheck">
            <inheritdoc />
        </member>
        <member name="T:ParcelCo.Parcel.ServiceContracts.Rules.ICollectionCheck">
            <inheritdoc />
        </member>
        <member name="T:ParcelCo.Parcel.ServiceContracts.Rules.IDimensionsCheck">
            <inheritdoc />
        </member>
        <member name="T:ParcelCo.Parcel.ServiceContracts.Rules.IHeightCheck">
            <inheritdoc />
        </member>
        <member name="T:ParcelCo.Parcel.ServiceContracts.Rules.ILengthCheck">
            <inheritdoc />
        </member>
        <member name="T:ParcelCo.Parcel.ServiceContracts.Rules.IRule">
            <summary>
            Encapsulates various business/validation logic for parcels.
            </summary>
            <remarks>Facliates Open of extenstion, closed for modification principle.
            Rather than hard code earch and every business logic/ validation and making
            things brittle (i.e. when a business logic needs to change the class needs
            to be updated) each business logic/vlidation is rule is encapsulated into
            a class. This class can either be applied or not from the collection with ease.
            When business rules change a new collection with a new set of extended rules 
            can be created rather than modification. 
            </remarks>
        </member>
        <member name="M:ParcelCo.Parcel.ServiceContracts.Rules.IRule.ApplyRule(System.Collections.Generic.IEnumerable{ParcelCo.Parcel.ModelContracts.IParcelType},System.Single,System.Single,System.Single,System.Single,ParcelCo.Parcel.ModelContracts.IParcelResult)">
            <summary>
            Contains the rule logic.
            </summary>
            <param name="parcelTypes">Collection of parcel types.</param>
            <param name="length">The length of current package that is being evaluated</param>
            <param name="breath">The breath. of current package that is being evaluated</param>
            <param name="height">The height of current package that is being evaluated</param>
            <param name="weight">The weight of current package that is being evaluated</param>
            <param name="parcelResult">The parcel result after evalutaion</param>
            <inheritDoc/>
        </member>
        <member name="T:ParcelCo.Parcel.ServiceContracts.Rules.IRulesEngine">
            <summary>
            This interfce acts as a factory. It is desgined to store a bunch of 
            strategy classes that contain rules/business logic 
            </summary>
        </member>
        <member name="P:ParcelCo.Parcel.ServiceContracts.Rules.IRulesEngine.Rules">
            <summary>
            A collection of rules that need to be satisfied
            </summary>
        </member>
        <member name="M:ParcelCo.Parcel.ServiceContracts.Rules.IRulesEngine.ApplyRules(System.Collections.Generic.IEnumerable{ParcelCo.Parcel.ModelContracts.IParcelType},System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Method that runs all the rules in the <see cref="P:ParcelCo.Parcel.ServiceContracts.Rules.IRulesEngine.Rules"/> collection.
            </summary>
            <param name="parcelTypes">The parcel types.</param>
            <param name="length">The length.</param>
            <param name="breath">The breath.</param>
            <param name="height">The height.</param>
            <param name="weight">The weight.</param>
            <returns>Return <see cref="T:ParcelCo.Parcel.ModelContracts.IParcelResult"/> object</returns>
        </member>
        <member name="T:ParcelCo.Parcel.ServiceContracts.Rules.IWeightCheck">
            <inheritdoc />
        </member>
    </members>
</doc>
